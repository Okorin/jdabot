/*
 * This file is generated by jOOQ.
*/
package generated_resources.tables;


import generated_resources.Test;
import generated_resources.tables.records.AdminUsersRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdminUsers extends TableImpl<AdminUsersRecord> {

    private static final long serialVersionUID = -1485217248;

    /**
     * The reference instance of <code>test.admin_users</code>
     */
    public static final AdminUsers ADMIN_USERS = new AdminUsers();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AdminUsersRecord> getRecordType() {
        return AdminUsersRecord.class;
    }

    /**
     * The column <code>test.admin_users.uId</code>.
     */
    public final TableField<AdminUsersRecord, String> UID = createField("uId", org.jooq.impl.SQLDataType.VARCHAR(22).nullable(false), this, "");

    /**
     * Create a <code>test.admin_users</code> table reference
     */
    public AdminUsers() {
        this(DSL.name("admin_users"), null);
    }

    /**
     * Create an aliased <code>test.admin_users</code> table reference
     */
    public AdminUsers(String alias) {
        this(DSL.name(alias), ADMIN_USERS);
    }

    /**
     * Create an aliased <code>test.admin_users</code> table reference
     */
    public AdminUsers(Name alias) {
        this(alias, ADMIN_USERS);
    }

    private AdminUsers(Name alias, Table<AdminUsersRecord> aliased) {
        this(alias, aliased, null);
    }

    private AdminUsers(Name alias, Table<AdminUsersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminUsers as(String alias) {
        return new AdminUsers(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdminUsers as(Name alias) {
        return new AdminUsers(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AdminUsers rename(String name) {
        return new AdminUsers(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AdminUsers rename(Name name) {
        return new AdminUsers(name, null);
    }
}
